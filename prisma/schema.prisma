// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["interactiveTransactions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DB_URL")
}

model Customer {
  id                    Int                    @id @default(autoincrement())
  email                 String?                @unique
  phone                 String?                @unique
  description           String?
  name                  String
  inventoryReservations InventoryReservation[]
}

model Admin {
  id           Int    @id @default(autoincrement())
  login        String @unique
  name         String
  password     String
  passwordSalt String
}

model Book {
  id                   Int             @id @default(autoincrement())
  name                 String
  previewOrig          String?
  previewJpeg          String?
  previewWebp          String?
  previewJpegThumbnail String?
  previewWebpThumbnail String?
  description          String?
  inventories          BookInventory[]
  bookAuthors          BookAuthor[]
  bookCategories       BookCategory[]
  bookLanguages        BookLanguage[]
}

model Author {
  id         Int          @id @default(autoincrement())
  name       String
  bookAuthor BookAuthor[]
}

model BookAuthor {
  bookId   Int
  book     Book   @relation(fields: [bookId], references: [id])
  authorId Int
  author   Author @relation(fields: [authorId], references: [id])

  @@unique([bookId, authorId])
}

model BookInventory {
  id                    Int                    @id @default(autoincrement())
  bookId                Int
  book                  Book                   @relation(fields: [bookId], references: [id])
  serialNumber          String
  deleteReason          String?
  deletedAt             DateTime?              @db.Timestamptz(6)
  inventoryReservations InventoryReservation[]
}

model InventoryReservation {
  id              Int           @id @default(autoincrement())
  createdAt       DateTime      @default(now()) @db.Timestamptz(6)
  startAt         DateTime      @db.Timestamptz(6)
  endAt           DateTime      @db.Timestamptz(6)
  returnedAt      DateTime?     @db.Timestamptz(6)
  bookInventoryId Int
  bookInventory   BookInventory @relation(fields: [bookInventoryId], references: [id])
  customerId      Int
  customer        Customer      @relation(fields: [customerId], references: [id])
  description     String?
}

model Category {
  id             Int            @id @default(autoincrement())
  name           String
  bookCategories BookCategory[]
}

model BookCategory {
  bookId     Int
  book       Book     @relation(fields: [bookId], references: [id])
  categoryId Int
  category   Category @relation(fields: [categoryId], references: [id])

  @@unique([bookId, categoryId])
}

model BookLanguage {
  bookId   Int
  book     Book     @relation(fields: [bookId], references: [id])
  code     String
  language Language @relation(fields: [code], references: [code])

  @@unique([bookId, code])
}

model Language {
  code         String         @id
  name         String
  nativeName   String
  BookLanguage BookLanguage[]
}
