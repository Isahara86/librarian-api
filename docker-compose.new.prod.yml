version: '3.8'

services:

  nodejs:
    build:
      context: .
      dockerfile: Dockerfile
    image: nodejs
    links:
      - db
    #    volumes:
    #      - ./tmp/logs/:/var/logs
    container_name: nodejs
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -f localhost:3000 || exit 1"]
      interval: 5s
      timeout: 5s
      retries: 5
    labels:
      - "traefik.http.routers.gg-api.rule=Host(`api.gummersbach-library.net`)"
      - "traefik.http.routers.gg-api.tls=true"
      - "traefik.http.routers.gg-api.tls.certresolver=mytlschallenge"
      - "traefik.port=3000"
    networks:
      - internal
      - my-network
    ports:
      - "3000:3000"

  # service name should be the same as in env.prod to allow prisma properly generate
  db:
    image: postgres:13
    container_name: db
    restart: unless-stopped
    environment:
      - POSTGRES_USER=${PG_USER}
      - POSTGRES_PASSWORD=${PG_PASSWORD}
      - POSTGRES_DB=librarian-db
    volumes:
      - ./tmp/db/:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready postgres://${PG_USER}:${PG_PASSWORD}@localhost:5432/librarian-db"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - internal
      - my-network
    ports:
      - "5433:5432"

networks:

  my-network:
    external: true
  internal:
    external: false