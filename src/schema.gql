# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Author {
  id: Int!
  name: String!
}

type Category {
  id: Int!
  name: String!
}

type Language {
  code: String!
  name: String!
  nativeName: String!
}

type Book {
  id: Int!
  name: String!
  description: String
  previewOrig: String
  previewJpeg: String
  previewWebp: String
  previewJpegThumbnail: String
  previewWebpThumbnail: String
  categories: [Category!]!
  authors: [Author!]!
  languages: [Language!]!
  isAvailable: Boolean!
}

"""customer """
type Customer {
  id: Int!

  """Customer nick name"""
  name: String!
  email: String
  phone: String
  description: String
}

type BookInventoryReservation {
  id: Int!

  """milliseconds"""
  createdAt: Timestamp

  """milliseconds"""
  startAt: Timestamp

  """milliseconds"""
  endAt: Timestamp

  """milliseconds"""
  returnedAt: Timestamp
  description: String
  customer: Customer!
}

"""
`Date` type as integer. Type represents date and time as number of milliseconds from start of UNIX epoch.
"""
scalar Timestamp

type BookInventoryDetails {
  id: Int!
  serialNumber: String!
  deleteReason: String
  activeReservation: BookInventoryReservation
}

type BookDetails {
  id: Int!
  name: String!
  description: String
  previewOrig: String
  previewJpeg: String
  previewWebp: String
  previewJpegThumbnail: String
  previewWebpThumbnail: String
  categories: [Category!]!
  authors: [Author!]!
  languages: [Language!]!
  isAvailable: Boolean!
  inventories: [BookInventoryDetails!]!
}

type BookInventory {
  id: Int!
  serialNumber: String!
  deleteReason: String
  book: Book!
}

type CustomerDetailsReservation {
  id: Int!

  """milliseconds"""
  createdAt: Timestamp

  """milliseconds"""
  startAt: Timestamp

  """milliseconds"""
  endAt: Timestamp

  """milliseconds"""
  returnedAt: Timestamp
  description: String
  bookInventory: BookInventory!
}

"""customer """
type CustomerDetails {
  id: Int!

  """Customer nick name"""
  name: String!
  email: String
  phone: String
  description: String
  activeReservations: [CustomerDetailsReservation!]!
}

type AdminLoginResponse {
  name: String!
  token: String!
}

type SuccessModel {
  success: Boolean!
}

type Query {
  authors(input: AuthorSearchInput!): [Author!]!
  categories(input: CategorySearchInput!): [Category!]!
  books(input: BookSearchInput!): [Book!]!
  bookDetails(id: Int!): BookDetails!
  customerDetails(id: Int!): CustomerDetails!
  customers(input: CustomersSearchInput!): [Customer!]!
  customerReservationHistory(input: CustomerReservationsSearchInput!): [CustomerDetailsReservation!]!
  bookReservationHistory(input: BookInventoryReservationSearchInput!): [BookInventoryReservation!]!
  languages: [Language!]!
}

input AuthorSearchInput {
  offset: Int = 0
  limit: Int = 10
  query: String
}

input CategorySearchInput {
  offset: Int = 0
  limit: Int = 10
  query: String
}

input BookSearchInput {
  offset: Int = 0
  limit: Int = 10

  """search by name, description"""
  query: String
  categoryIds: [Int!]
  authorIds: [Int!]
}

input CustomersSearchInput {
  offset: Int = 0
  limit: Int = 10
  query: String
}

input CustomerReservationsSearchInput {
  offset: Int = 0
  limit: Int = 10
  customerId: Int!
}

input BookInventoryReservationSearchInput {
  offset: Int = 0
  limit: Int = 10
  bookId: Int!
  inventoryId: Int
}

type Mutation {
  createAuthor(input: AuthorCreateInput!): Author!
  updateAuthor(input: AuthorUpdateInput!): Author!
  createCategory(input: CategoryCreateInput!): Category!
  updateCategory(input: CategoryUpdateInput!): Category!
  createBook(input: BookCreateInput!): Book!
  updateBook(input: BookUpdateInput!): Book!
  createCustomer(input: CustomerCreateInput!): Customer!
  updateCustomer(input: CustomerUpdateInput!): Customer!
  adminLogin(input: AdminLoginInput!): AdminLoginResponse!
  inviteAdmin(input: AdminInviteInput!): SuccessModel!
  createBookReservation(input: BookInventoryReservationCreateInput!): BookInventoryReservation!
  updateBookReservation(input: BookInventoryReservationUpdateInput!): BookInventoryReservation!
}

input AuthorCreateInput {
  name: String!
}

input AuthorUpdateInput {
  name: String!
  id: Int!
}

input CategoryCreateInput {
  name: String!
}

input CategoryUpdateInput {
  name: String!
  id: Int!
}

input BookCreateInput {
  name: String!
  description: String

  """When not set previous value will be used"""
  preview: Upload
  categoryIds: [Int!]!
  authorIds: [Int!]!
  languages: [String!]!
  inventories: [BookInventoryCreateInput!]!
}

"""The `Upload` scalar type represents a file upload."""
scalar Upload

input BookInventoryCreateInput {
  serialNumber: String!
}

input BookUpdateInput {
  name: String!
  description: String

  """When not set previous value will be used"""
  preview: Upload
  categoryIds: [Int!]!
  authorIds: [Int!]!
  languages: [String!]!
  id: Int!
  updatedInventories: [BookInventoryUpdateInput!]!
  newInventories: [BookInventoryCreateInput!]!
}

input BookInventoryUpdateInput {
  id: Int!
  serialNumber: String!
  deleteReason: String
}

input CustomerCreateInput {
  name: String!
  email: String
  phone: String
  description: String
}

input CustomerUpdateInput {
  name: String!
  email: String
  phone: String
  description: String
  id: Int!
}

input AdminLoginInput {
  login: String!
  password: String!
}

input AdminInviteInput {
  name: String!
  login: String!
  password: String!
}

input BookInventoryReservationCreateInput {
  customerId: Int!
  bookInventoryId: Int!
  description: String!
  startAt: Timestamp!
  endAt: Timestamp!
}

input BookInventoryReservationUpdateInput {
  customerId: Int!
  bookInventoryId: Int!
  description: String!
  startAt: Timestamp!
  endAt: Timestamp!
  id: Int!
  returnedAt: Timestamp
}